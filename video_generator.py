from open3d import *import numpy as npimport osimport sysimport cv2class video_generator :    def __init__(self):        self.number_of_frame = 0        self.camera_trajectory = open3d.read_pinhole_camera_trajectory("/home/kangning/PycharmProjects/visualization/camera_trajectory/000021.json")    def move_forward(self,vis):        '''        # This function is called within the Visualizer::run() loop        # The run loop calls the function, then re-render        # So the sequence in this function is to:        # 1. Capture frame        # 2. index++, check ending criteria        # 3. Set camera        # 4. (Re-render) image        '''        if self.number_of_frame < 2:            ctr = vis.get_view_control()            ctr.convert_from_pinhole_camera_parameters(self.camera_trajectory.intrinsic, self.camera_trajectory.extrinsic[0])            print(self.camera_trajectory.intrinsic,self.camera_trajectory.extrinsic[0])            self.number_of_frame +=1        else:            #capture image            image = vis.capture_screen_float_buffer()            image = 255 * np.asarray(image)            image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)            image = image.astype(np.uint8)            self.image_for_pc = image            vis.destroy_window()            self.number_of_frame = 0        return False    def create_image(self,geometries):        vis = Visualizer()        vis.create_window()        opt = vis.get_render_option()        opt.background_color = np.asarray([0,0,0])        for geometry in geometries:            vis.add_geometry(geometry)        vis.register_animation_callback(self.move_forward)        vis.run()        return self.image_for_pc